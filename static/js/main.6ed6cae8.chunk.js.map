{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AllRoutes","hideMenu","location","useLocation","useEffect","path","component","About","Login","Home","App","navbarLinks","useRef","className","href","onClick","e","current","classList","toggle","ref","activeClassName","exact","to","contains","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wOAiDA,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAEfC,EAAWC,cAKf,OAJAC,qBAAU,WACRH,MACC,CAACC,IAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOG,KAAK,SAASC,UAAWC,IAEhC,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWE,IAEhC,cAAC,IAAD,CAAOH,KAAK,IAAIC,UAAWG,OAMjC,SAASA,IACP,OACE,sCAIJ,SAASF,IACP,OACE,uCAIJ,SAASC,IACP,OACE,uCAGWE,MAjFf,WAEE,IAAMC,EAAcC,iBAAO,MAW3B,OACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,qBAAKA,UAAU,SAAf,SACE,sBAAKA,UAAU,mBAAf,UACE,mBAAGC,KAAK,QAAQD,UAAU,cAA1B,oBACA,wBAAQE,QAAS,SAACC,GAf1BL,EAAYM,QAAQC,UAAUC,OAAO,kBAeuBN,UAAU,iBAA9D,SACE,sBAAMA,UAAU,0BAElB,qBAAKO,IAAKT,EAAaE,UAAU,6BAAjC,SACE,qBAAIA,UAAU,aAAd,UACE,oBAAIA,UAAU,WAAd,SACE,cAAC,IAAD,CAASQ,gBAAgB,YAAYC,OAAO,EAAMT,UAAU,WAAWU,GAAG,QAA1E,oBAEF,oBAAIV,UAAU,WAAd,SACE,cAAC,IAAD,CAASQ,gBAAgB,YAAYC,OAAO,EAAMT,UAAU,WAAWU,GAAG,SAA1E,qBAEF,oBAAIV,UAAU,WAAd,SACE,cAAC,IAAD,CAASQ,gBAAgB,YAAYC,OAAO,EAAMT,UAAU,WAAWU,GAAG,SAA1E,+BAMV,qBAAKV,UAAU,YAAf,SACE,cAACb,EAAD,CAAWC,SAAU,WA9BtBU,EAAYM,QAAQC,UAAUM,SAAS,kBAC1Cb,EAAYM,QAAQC,UAAUO,IAAI,4BCDzBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6ed6cae8.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { BrowserRouter, NavLink, Switch, Route, useLocation } from 'react-router-dom';\nimport './App.css';\n\nfunction App() {\n\n  const navbarLinks = useRef(null);\n  const handleNavbarButton = (e) => {\n    navbarLinks.current.classList.toggle('menu-collapse');\n  };\n\n  const hideNavMenu = () => {\n    if (!navbarLinks.current.classList.contains('menu-collapse')) {\n      navbarLinks.current.classList.add('menu-collapse');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <nav className='navbar'>\n          <div className='navbar-container'>\n            <a href=\"/Home\" className='brand-title'>Cyprus</a>\n            <button onClick={(e) => { handleNavbarButton(e); }} className='navbar-toggler'>\n              <span className='navbar-toggler-icon'></span>\n            </button>\n            <div ref={navbarLinks} className='navbar-links menu-collapse'>\n              <ul className='links-list'>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/Home'>Home</NavLink>\n                </li>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/About'>About</NavLink>\n                </li>\n                <li className='nav-item'>\n                  <NavLink activeClassName='is-active' exact={true} className='nav-link' to='/Login'>Login</NavLink>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n        <div className='container'>\n          <AllRoutes hideMenu={() => { hideNavMenu(); }}></AllRoutes>\n        </div>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nfunction AllRoutes({ hideMenu }) {\n\n  let location = useLocation();\n  useEffect(() => {\n    hideMenu();\n  }, [location]);\n\n  return (\n    <Switch>\n      <Route path=\"/about\" component={About}>\n      </Route>\n      <Route path=\"/login\" component={Login}>\n      </Route>\n      <Route path=\"/\" component={Home}>\n      </Route>\n    </Switch>\n  );\n}\n\nfunction Home() {\n  return (\n    <h1>Home</h1>\n  );\n}\n\nfunction About() {\n  return (\n    <h1>About</h1>\n  );\n}\n\nfunction Login() {\n  return (\n    <h1>Login</h1>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as ReactBootStrap from \"react-bootstrap\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}